{% extends 'admin/admin.html.twig' %}
{#{% form_theme form 'form/custom_fields.html.twig' %}#}

{% block title %}{{ parent() }} | Rechercher {% endblock %}

{% set menu_recherche = true %}

{% block body %}
    {% for flashMessage in app.session.flashbag.get('success') %}
        <div class="card bg-success text-white shadow">
            <div class="card-body">
                {{ flashMessage }}
            </div>
        </div>
    {% endfor %}

    {% for flashMessage in app.session.flashbag.get('error') %}
        <div class="card bg-warning text-white shadow">
            <div class="card-body">
                {{ flashMessage }}
            </div>
        </div>
    {% endfor %}

    <div class="row">
        <div class="col-md-4">
            <div class="card shadow mb-4 p-2">
                <h4>Rechercher simple par prénom</h4>
                <div class="input-group custom-search-form">
                    <input type="text" id="search" class="form-control" placeholder="Nom d'utilisateur...">
                </div>
                <div class="mt-3">
                    <div style="display: flex;justify-content: space-between">
                        <h4>Résultats</h4>
                    </div>
                    <p class="text-center not-found"></p>
                    <ul class="list-group" id="entitiesNav"></ul>
                </div>
            </div>

            <div class="card shadow mb-4 p-2">
                <h4>Rechercher avancé utilisateur</h4>
                <div class="col-md-12">
                    {{ form_start(filter, {'attr': {'class': 'form-filter'}}) }}
                    <div class="form-group">
                        {{ form_row(filter.username) }}
                    </div>
                    <div class="form-group">
                        {{ form_row(filter.userFirstName) }}
                    </div>
                    <div class="form-group">
                        {{ form_row(filter.userLastName) }}
                    </div>
                    <div class="alert alert-danger"></div>
                    <div class="form-group">
                        {{ form_row(filter.save, {'attr':{'class':'btn btn-primary button-submit'}}) }}
                    </div>
                    {{ form_end(filter) }}
                </div>
            </div>
        
        </div>

        <form action="" method="POST" class="form-search col-md-8">
            <div class="card list-users shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary text-center">Resultats</h6>
                    <div class="box-header">
                        <div class="list-count">
                            <span class="title-count-text"> </span><span
                                    class="title-count"></span>
                        </div>
                    </div>
                </div>
                <div class="card-body">

                </div>
            </div>
        </form>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">

        $(document).ready(function(){

            $('.alert-danger').hide();
            /**
             * Script to filter user by username|firstName|lastName
             */
            $('.button-submit').on('click', function(){
                // initialize progress bar
                NProgress.start();
                $('.card').css({'opacity':'0.5'});
                $(this).text('En cours ...');
                var formArray = $('.form-filter').serializeArray();
                const obj = {};
                if(Array.isArray(formArray)) {
                    for(var i = 0; i<formArray.length; i++) {
                        const data = formArray[i];
                        obj[data.name] = data.value;
                    }
                }

                if(obj.username == '' || obj.userFirstName == '' || obj.userLastName == '') {
                    $('.alert-danger').html('Les champs sont obligatoires a remplir').show();
                    $('.card').css({'opacity':'1'});
                    $('.button-submit').text('Filtrer');
                    NProgress.done();
                } else {
                    var tr = '';
                    $.ajax({
                        url: '{{ path('user_search_result_ajax') }}',
                        type: 'GET',
                        data: obj,
                        success: function(data){
                            $('.card-body').empty().html(data);
                            $('input').val("");
                            NProgress.done();
                            $('.card').css({'opacity':'1'});
                            $('.button-submit').text('Filtrer');
                            $('.alert-danger').hide();
                        }
                    })
                }

                return false;
            })

            var li = '';
            $('.not-found').hide();
            /**
             * Script to filter user by only lastName
             */
            $('#search').keyup(_.debounce(function(){
                $('#entitiesNav').empty();
                var valueSearch = $(this).val();
                if(valueSearch.length >= 3) {
                    $.ajax({
                        url: '{{ path('user_search_result_ajax') }}',
                        type: 'GET',
                        beforeSend: function(){
                            NProgress.start();
                        },
                        data: {userLastNameSearch: valueSearch},
                        success: function(data){
                            if(data.length) {
                                $.each(data, function(k,v){
                                    li += `
                                <li class="list-group-item">
                                        <strong>Nom:</strong> ${v.username} <br>
                                        <strong>Role:</strong> ${v.skRole.rlName}
                                </li>
                               `
                                });
                                $('#entitiesNav').html(li);
                                li = '';
                                $('.not-found').hide();
                            }else{
                                li = '';
                                $('#entitiesNav').html('');
                                $('.not-found').html('Aucun résultat pour la recherche').show();
                            }
                            NProgress.done();
                        }
                    })
                }
            },500))

        });
        // Call the dataTables jQuery plugin

        $(function () {
            $('#list-users').DataTable(
                {
                    "order": [[0, "desc"]],
                    "bProcessing": true,
                    "bFilter": true,
                    "oLanguage": {
                        "sProcessing": "Traitement...",
                        "oPaginate": {
                            "sPrevious": "Précédente", // This is the link to the previous page
                            "sNext": "Suivante", // This is the link to the next page
                        },
                        "sSearch": "Filtrer: ",
                        "sLengthMenu": "Afficher _MENU_ enregistrement par page",
                        "sEmptyTable": "Aucun utilisateur trouvé",
                        "sInfo": "Voir _TOTAL_ de _PAGE_ pour _PAGES_ entrées",
                    },
                    "footerCallback": function (row, data, start, end, display) {
                        $('.title-count').html(display.length);
                    }
                });
        });
    </script>
{% endblock %}